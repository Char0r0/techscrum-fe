name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  build:
    runs-on: debian_linux

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_BUCKET: ${{secrets.AWS_S3_BUCKET}}
      REACT_APP_API_URL: ${{ secrets.REACT_APP_BACKEND_URL }}
      REACT_APP_CI: ${{ secrets.REACT_APP_CI }}
      GENERATE_SOURCEMAP: ${{secrets.GENERATE_SOURCEMAP}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Adjust this to your Node.js version

      - name: Install Dependencies
        run: |
          yarn cache clean
          yarn install

      - name: Build
        run: |
          echo "REACT_APP_API_URL=${{ secrets.REACT_APP_BACKEND_URL }}" > .env.production
          echo "REACT_APP_CI=${{ secrets.REACT_APP_CI }}" >> .env.production
          echo "GENERATE_SOURCEMAP=${{ secrets.GENERATE_SOURCEMAP }}" >> .env.production
          cat .env.production
          yarn build
      # cloudfront invalidation, make s3 bucket and edge server sync
      - name: Deploy to S3 and cloudfront invalidation
        run: |
          aws s3 sync build/ s3://${{ secrets.AWS_S3_BUCKET }} --delete
          aws cloudfront create-invalidation --distribution-id ${{secrets.CLOUDFRONT_DISTRIBUTION_ID}} --paths "/*"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_S3_BUCKET: ${{secrets.AWS_S3_BUCKET}}

      - name: Clean up workspace
        run: |
          rm -rf build
